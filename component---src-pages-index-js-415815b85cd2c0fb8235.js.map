{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Preview.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_Preview__WEBPACK_IMPORTED_MODULE_3__","_ref","edges","data","allMdx","a","createElement","map","edge","frontmatter","node","title","date","excerpt","path","key","className","to","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","TitleAndDesc","_data$site$siteMetada","site","siteMetadata","description","react_default","gatsby_browser_entry","Header","Header_TitleAndDesc","_3978990474","Helmet_default","components_Header","Preview"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAKeE,EAAA,iBAAAS,GAAc,IACnBC,EADmBD,EAAXE,KACOC,OAAfF,MAER,OACEN,EAAAS,EAAAC,cAACP,EAAA,EAAD,KACGG,EAAMK,IAAI,SAAAC,GAAQ,IACTC,EAAgBD,EAAKE,KAArBD,YACAE,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,KAAMC,EAAkBJ,EAAlBI,QAASC,EAASL,EAATK,KAC9B,OACElB,EAAAS,EAAAC,cAACN,EAAA,EAAD,CACEe,IAAKD,EACLH,MAAOA,EACPC,KAAMA,EACNC,QAASA,EACTC,KAAMA,MAIZlB,EAAAS,EAAAC,cAAA,OAAKU,UAAW,oBACdpB,EAAAS,EAAAC,cAACR,EAAA,EAAD,CAAMkB,UAAW,+BAAgCC,GAAG,SAApD,kBAQD,IAAMvB,EAAK,+CChClBJ,EAAAG,EAAAD,EAAA,sBAAA0B,IAAA,IAAAvB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAwB,EAAA7B,EAAA,IAAA8B,EAAA9B,EAAAO,EAAAsB,GAAA7B,EAAAG,EAAAD,EAAA,sBAAA4B,EAAAf,IAAAf,EAAA,KAAAA,EAAA,GAcyB+B,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATzB,GAA2E,IAAxC0B,EAAwC1B,EAAxC0B,gBAAiBxB,EAAuBF,EAAvBE,KAAMT,EAAiBO,EAAjBP,MAAOkC,EAAU3B,EAAV2B,OACzDC,EAAY1B,EACdA,EAAKA,KACLwB,EAAgBjC,IAAUiC,EAAgBjC,GAAOS,KAErD,OACEP,EAAAS,EAAAC,cAACV,EAAAS,EAAMyB,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAajC,EAAAS,EAAAC,cAAA,qCAKrB,IAAMY,EAAc,SAAAa,GAAS,IACnB5B,EAAkC4B,EAAlC5B,KAAMT,EAA4BqC,EAA5BrC,MAAOkC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACEpC,EAAAS,EAAAC,cAACiB,EAAmBU,SAApB,KACG,SAAAN,GAAe,OACd/B,EAAAS,EAAAC,cAACoB,EAAD,CACEvB,KAAMA,EACNT,MAAOA,EACPkC,OAAQA,GAAUI,EAClBL,gBAAiBA,4BCzC3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8bCsBhCK,UAjBU,SAAAtC,GAAiC,IAA9BuC,EAA8BvC,EAA9BuC,SAAUC,EAAoBxC,EAApBwC,cACpC,OAAKA,EAGEjB,IAAMlB,cAAcoC,+UAApBC,CAAA,CACLH,WACAC,iBACGA,EAAcG,OALV,kMCJLC,EAAe,SAAA5C,GAAc,IAAA6C,EAAA7C,EAAXE,KACc4C,KAAKC,aAAjCrC,EADyBmC,EACzBnC,MAAOsC,EADkBH,EAClBG,YACf,OACEC,EAAA7C,EAAAC,cAAA,OAAKU,UAAU,QACbkC,EAAA7C,EAAAC,cAAC6C,EAAA,EAAD,CAAMlC,GAAI,KACRiC,EAAA7C,EAAAC,cAAA,MAAIU,UAAU,kCAAkCL,IAElDuC,EAAA7C,EAAAC,cAAA,KAAGU,UAAU,eAAeiC,KAqBnBG,EAhBA,kBACbF,EAAA7C,EAAAC,cAAC6C,EAAA,EAAD,CACEzD,MAAK,aAULkC,OAAQ,SAAAzB,GAAI,OAAI+C,EAAA7C,EAAAC,cAAC+C,EAAD,CAAclD,KAAMA,KAXtCA,KAAAmD,KCZa9D,EAAA,WAAAS,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAH,OACbkB,EAAA7C,EAAAC,cAAA4C,EAAA7C,EAAAyB,SAAA,KACEoB,EAAA7C,EAAAC,cAACiD,EAAAlD,EAAD,CAAQM,MAAO,cACfuC,EAAA7C,EAAAC,cAAA,OAAKU,UAAU,wDACbkC,EAAA7C,EAAAC,cAACkD,EAAD,MACAN,EAAA7C,EAAAC,cAAA,OAAKU,UAAW,aAAcgB,GAC9BkB,EAAA7C,EAAAC,cAAA,UAAQU,UAAW,0CAAnB,2DCVN,IAAArB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAyBemE,IArBC,SAAAxD,GAAoC,IAAjCU,EAAiCV,EAAjCU,MAAOC,EAA0BX,EAA1BW,KAAMC,EAAoBZ,EAApBY,QAASC,EAAWb,EAAXa,KACvC,OACElB,EAAAS,EAAAC,cAACR,EAAA,EAAD,CAAMmB,GAAIH,GACRlB,EAAAS,EAAAC,cAAA,WAASU,UAAW,YAClBpB,EAAAS,EAAAC,cAAA,cACEV,EAAAS,EAAAC,cAAA,MAAIU,UAAW,qBAAsBL,GACrCf,EAAAS,EAAAC,cAAA,QAAMU,UAAW,sBAAuBJ,IAE1ChB,EAAAS,EAAAC,cAAA,KAAGU,UAAW,cAAeH","file":"component---src-pages-index-js-415815b85cd2c0fb8235.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport Preview from '../components/Preview';\n\nexport default ({ data }) => {\n  const { edges } = data.allMdx;\n\n  return (\n    <Layout>\n      {edges.map(edge => {\n        const { frontmatter } = edge.node;\n        const { title, date, excerpt, path } = frontmatter;\n        return (\n          <Preview\n            key={path}\n            title={title}\n            date={date}\n            excerpt={excerpt}\n            path={path}\n          />\n        );\n      })}\n      <div className={'text-center mt-4'}>\n        <Link className={'underline hover:no-underline'} to=\"/tags\">\n          Browse tags\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\n\nconst TitleAndDesc = ({ data }) => {\n  const { title, description } = data.site.siteMetadata;\n  return (\n    <div className=\"mb-8\">\n      <Link to={'/'}>\n        <h2 className=\"text-3xl text-center font-bold\">{title}</h2>\n      </Link>\n      <p className=\"text-center\">{description}</p>\n    </div>\n  );\n};\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => <TitleAndDesc data={data} />}\n  />\n);\n\nexport default Header;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\n\nexport default ({ children }) => (\n  <>\n    <Helmet title={'mundi.sh_'} />\n    <div className=\"m-0 max-w-2xl mx-auto p-5 min-h-screen flex flex-col\">\n      <Header />\n      <div className={'flex-grow'}>{children}</div>\n      <footer className={'text-center pt-4 mt-8 border-t text-sm'}>\n        Thanks for reading\n      </footer>\n    </div>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Preview = ({ title, date, excerpt, path }) => {\n  return (\n    <Link to={path}>\n      <section className={'p-5 mb-5'}>\n        <header>\n          <h3 className={'text-xl font-bold'}>{title}</h3>\n          <span className={'font-serif text-sm'}>{date}</span>\n        </header>\n        <p className={'font-serif'}>{excerpt}</p>\n      </section>\n    </Link>\n  );\n};\n\nPreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default Preview;\n"],"sourceRoot":""}