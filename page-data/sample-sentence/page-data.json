{"componentChunkName":"component---src-templates-blog-post-js","path":"/sample-sentence","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/sample-sentence\",\n  \"date\": \"2019-11-16\",\n  \"title\": \"Sample sentence\",\n  \"tags\": [\"japanese\"],\n  \"excerpt\": \"The idea here is to figure out the translation of a random sentence I've come up with: You're only mad because they stole the izakaya's tame monkey.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The idea here is to figure out the translation of a random sentence I've come up with:\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"You're only mad because they stole the izakaya's tame monkey.\")), mdx(\"p\", null, \"My initial effort to gather the pieces needed yielded this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Ja, {\n    mdxType: \"Ja\"\n  }, mdx(Furigana, {\n    readings: ['おこ'],\n    mdxType: \"Furigana\"\n  }, \"\\u6012\"), \" \\u308B\"), \" - To get angry/mad\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Ja, {\n    mdxType: \"Ja\"\n  }, mdx(Furigana, {\n    readings: ['い', 'ざか', 'や'],\n    mdxType: \"Furigana\"\n  }, \"\\u5C45\\u9152\\u5C4B\")), \" - Izakaya\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Ja, {\n    mdxType: \"Ja\"\n  }, mdx(Furigana, {\n    readings: ['ぬす'],\n    mdxType: \"Furigana\"\n  }, \"\\u76D7\")), \" - To steal\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Ja, {\n    mdxType: \"Ja\"\n  }, mdx(Furigana, {\n    readings: ['おん', 'じゅん'],\n    mdxType: \"Furigana\"\n  }, \"\\u6E29\\u9806\"), \" (\\u306A)\"), \" - Tame (adj.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"A(\\u306E)\\u305F\\u3081\\u306B...\"), \" - Because of A ...\")), mdx(\"p\", null, \"Which would result in something like:\"), mdx(BlockQuote, {\n    lang: 'ja',\n    mdxType: \"BlockQuote\"\n  }, mdx(Furigana, {\n    readings: ['い', 'ざか', 'や'],\n    mdxType: \"Furigana\"\n  }, \"\\u5C45\\u9152\\u5C4B\"), \"\\u306E\", mdx(Furigana, {\n    readings: ['おん', 'じゅん'],\n    mdxType: \"Furigana\"\n  }, \"\\u6E29\\u9806\"), \"\\u306A\\u30B5\\u30EB\\u3092\", mdx(Furigana, {\n    readings: ['ぬす'],\n    mdxType: \"Furigana\"\n  }, \"\\u76D7\"), \"\\u3093\\u3060\\u305F\\u3081\\u306B\", mdx(Furigana, {\n    readings: ['おこ'],\n    mdxType: \"Furigana\"\n  }, \"\\u6012\"), \"\\u3089\\u308C\\u307E\\u3057\\u305F\\u3002\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"However\"), \", reaching out to a friend (native speaker), I got a few pointers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tame has a lot of possible translations, but in this case, \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u201D\\u98FC\\u3044\\u306A\\u3089\\u3059\\u201D\"), \" or \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u201C\\u304A\\u3068\\u306A\\u3057\\u3044\\u201D\"), \" sounds better.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u306B\"), \" particle after \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u305F\\u3081\"), \" can be omitted, making it a bit more conversational (like with a lot of particle uses).\")), mdx(\"p\", null, \"So what I ended up with was the following:\"), mdx(BlockQuote, {\n    lang: 'ja',\n    mdxType: \"BlockQuote\"\n  }, mdx(Furigana, {\n    readings: ['い', 'ざか', 'や'],\n    mdxType: \"Furigana\"\n  }, \"\\u5C45\\u9152\\u5C4B\"), \"\\u306E\\u304A\\u3068\\u306A\\u3057\\u3044\\u30B5\\u30EB\\u3092\", mdx(Furigana, {\n    readings: ['ぬす'],\n    mdxType: \"Furigana\"\n  }, \"\\u76D7\"), \"\\u3093\\u3060\\u305F\\u3081\\u3001\", mdx(Furigana, {\n    readings: ['おこ'],\n    mdxType: \"Furigana\"\n  }, \"\\u6012\"), \"\\u3089\\u308C\\u307E\\u3057\\u305F\\u3002\"), mdx(\"h2\", null, \"Take aways:\"), mdx(\"p\", null, \"Apart from the new vocabulary itself, what I learned was the concept of \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u305F\\u3081\"), \":\"), mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u305F\\u3081\"), \" have other possible uses, but in this case the concept was that of a cause having an effect.\", mdx(\"p\", null, \"Both cause and effect can be either a noun or an action (verb).\"), mdx(\"p\", null, \"Given the structure \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cause\"), \" \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"(\\u306E)\\u305F\\u3081(\\u306B/\\u306E)\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"effect\"), \", the following rules applies:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Noun\"), \" \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u306E\\u305F\\u3081\\u306E\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"noun\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Noun\"), \" \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u306E\\u305F\\u3081(\\u306B)\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"verb\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Verb\"), \" \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u305F\\u3081\\u306E\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"noun\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Verb\"), \" \", mdx(Ja, {\n    mdxType: \"Ja\"\n  }, \"\\u305F\\u3081(\\u306B)\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"verb\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Sample sentence","date":"2019-11-16"}}},"pageContext":{"pathSlug":"/sample-sentence","prev":{"frontmatter":{"path":"/python-neat-string-formatting","title":"Python: Neat string formatting","date":"2019-11-14","tags":["python"],"excerpt":"In my efforts to learn python, I've been spending some time on Codewars doing katas. Apart from being a good place to come across problems to solve, Codewars also lists top voted solutions for katas which are a great source for learning some new tricks."}},"next":null}},"staticQueryHashes":["3000541721"]}