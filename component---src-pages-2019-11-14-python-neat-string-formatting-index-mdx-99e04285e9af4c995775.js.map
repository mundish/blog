{"version":3,"sources":["webpack:///./src/pages/2019-11-14-python-neat-string-formatting/index.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"+NAOaA,EAAe,CAC1B,KAAQ,iCACR,KAAQ,aACR,MAAS,iCACT,KAAQ,CAAC,UACT,QAAW,iQAEPC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yFAAsE,mBAAGC,WAAW,IAChF,KAAQ,4BAD0D,YAAtE,4LAKA,0EACA,yBAAK,sBAAMA,WAAW,MAClB,UAAa,mBADZ,yIAOL,2DAAwC,4BAAYA,WAAW,KAAvB,KAAxC,kEAAwJ,oBAAIA,WAAW,KAAf,kBAAxJ,KACA,iDACA,mFAAgE,mBAAGA,WAAW,IAC1E,KAAQ,8DACP,4BAAYA,WAAW,KAAvB,UAF2D,WAAhE,aAGM,mBAAGA,WAAW,IAChB,KAAQ,kFACP,4BAAYA,WAAW,KAAvB,KAFC,aAHN,KAMA,8BAAW,4BAAYA,WAAW,KAAvB,UAAX,4EAA0I,oBAAIA,WAAW,KAAf,qBAA1I,KAA6L,4BAAYA,WAAW,KAAvB,MAA7L,2BACA,0CAAuB,4BAAYA,WAAW,KAAvB,uBAAvB,WAAkG,4BAAYA,WAAW,KAAvB,KAAlG,wCAAwL,4BAAYA,WAAW,KAAvB,KAAxL,yFAEA,kDAA+B,mBAAGA,WAAW,IACzC,KAAQ,6FADmB,UAA/B,4CAIA,6HACA,0DAAuC,oBAAIA,WAAW,KAAf,UAAvC,iCACA,yBAAK,sBAAMA,WAAW,MAClB,UAAa,mBADZ,uHAOL,wCACA,2HACA,yBAAK,sBAAMA,WAAW,MAClB,UAAa,mBADZ,+MAaTJ,EAAWK,gBAAiB,G,kCC3Eb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-2019-11-14-python-neat-string-formatting-index-mdx-99e04285e9af4c995775.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"path\": \"/python-neat-string-formatting\",\n  \"date\": \"2019-11-14\",\n  \"title\": \"Python: Neat string formatting\",\n  \"tags\": [\"python\"],\n  \"excerpt\": \"In my efforts to learn python, I've been spending some time on Codewars doing katas. Apart from being a good place to come across problems to solve, Codewars also lists top voted solutions for katas which are a great source for learning some new tricks.\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`In my efforts to learn python, I've been spending some time on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.codewars.com\"\n      }}>{`Codewars`}</a>{` doing katas.\nApart from being a good place to come across problems to solve,\nCodewars also lists top voted solutions for katas which are a great source for learning some new tricks.`}</p>\n    <p>{`One such trick I've picked up is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def create_phone_number(n):\n  return \"({}{}{}) {}{}{}-{}{}{}{}\".format(*n)\n\ncreate_phone_number([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n`}</code></pre>\n    <p>{`This function will take an array `}<inlineCode parentName=\"p\">{`n`}</inlineCode>{` consisting of 10 integers (0-9) and return them in the format `}<em parentName=\"p\">{`(012) 345-6789`}</em>{`.`}</p>\n    <p>{`So how does this work?`}</p>\n    <p>{`Well, there's two (fairly basic) main concepts here: the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.python.org/3/library/stdtypes.html#str.format\"\n      }}><inlineCode parentName=\"a\">{`format`}</inlineCode>{`-method`}</a>{`\nand the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.python.org/3.4/tutorial/controlflow.html#unpacking-argument-lists\"\n      }}><inlineCode parentName=\"a\">{`*`}</inlineCode>{`-operator`}</a>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`format`}</inlineCode>{`-method interpolates each of the arguments passed into the corresponding `}<em parentName=\"p\">{`replacement field`}</em>{` (`}<inlineCode parentName=\"p\">{`{}`}</inlineCode>{`) in the target string.`}</p>\n    <p>{`In the function `}<inlineCode parentName=\"p\">{`create_phone_number`}</inlineCode>{` above, `}<inlineCode parentName=\"p\">{`n`}</inlineCode>{` is an array, which with the help of `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` is \"unpacked\",\nor split into a series of single arguments passed into the function.`}</p>\n    <p>{`If you're familiar with `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\"\n      }}>{`spread`}</a>{`\nin JavaScript this should be familiar.`}</p>\n    <p>{`This is cool and all, but passing that phone number as an array feels cumbersome, don't you think?`}</p>\n    <p>{`Not a problem, since (like with `}<em parentName=\"p\">{`spread`}</em>{` ) we can unpack strings too:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def format_phone_number(n):\n  return \"({}{}{}) {}{}{}-{}{}{}{}\".format(*n)\n\nformat_phone_number(\"0123456789\")\n`}</code></pre>\n    <p>{`That's nicer!`}</p>\n    <p>{`To wrap up, here's a couple of examples for other cases where this could be a suitable solution:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def format_date(date):\n    # YYYY-MM-DD\n    return \"{}{}{}{}-{}{}-{}{}\".format(*date)\n\ndef format_swedish_personal_id_number(n): # YYYYMMDD-XXXX\n    return \"{}{}{}{}{}{}{}{}-{}{}{}{}\".format(*n)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}