{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/StartLink.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/themes/vsDark/index.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/Heading.js","webpack:///./src/components/A.js","webpack:///./src/templates/blogPost.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","len","length","i","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","o","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","obj","value","defineProperty","enumerable","configurable","writable","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","StartLink","className","to","uniqueId","_","Token","Prism","util","encode","tokens","type","content","alias","map","replace","match","objId","clone","visited","hasOwnProperty","forEach","v","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","newToken","ret","token","DFS","this","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","k","p","delNum","after","wrapped","splice","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","markup","tagName","includedCdataInside","def","xml","html","mathml","svg","envVars","insideString","bash","variable","toBeCopied","shell","clike","punctuation","c","cpp","string","css","addInlined","selector","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","javaDocLike","javadoclike","docLanguage","definition","l","docCommentSupport","addSupport","keywords","java","function","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","indexOf","tokenizePlaceholders","t","s","substring","middle","replacement","concat","php","string_interpolation","parameterPrefix","jsdoc","actionscript","comment","interpolation","coffeescript","coffee","unshift","maybeClassNameTokens","flow","keyword","n4js","n4jsd","typescript","ts","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","filter","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","graphql","inner","createInline","starAlternative","tableCell","tableRow","tableLine","markdown","codeLang","codeBlock","trim","split","toLowerCase","cls","autoloader","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","diff","PREFIXES","prefix","git","go","handlebars","json","less","makefile","objectivec","ocaml","python","py","reason","sass","atrule","operator","important","property","scss","sql","stylus","func","tsx","wasm","yaml","yml","defaultProps","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Component","Highlight","this$1","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","CodeBlock","vsDark","BaseComponent","level","Element","ComposedHeading","Heading","H1","H2","H3","H4","H5","H6","A","href","isExternal","rel","Template","data","pageContext","body","frontmatter","title","date","prev","next","components","h1","Headings","h2","h3","h4","h5","h6","pre","path"],"mappings":"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","file":"component---src-templates-blog-post-js-5e7ab38b9922704631d2.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst StartLink = () => {\n  return (\n    <div className={'text-center border-t pt-4'}>\n      <Link className={'underline hover:no-underline'} to=\"/\">\n        Back to start\n      </Link>\n    </div>\n  );\n};\n\nexport default StartLink;\n","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'number': {\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n    greedy: true\n  },\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n  'boolean': /\\b(?:true|false)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': [{\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    }, {\n      pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n      lookbehind: true\n    }],\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});\n/* \"prismjs/components/prism-javascript\" */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-javadoclike\" */\n\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);\n/* \"prismjs/components/prism-java\" */\n\n\n(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-markup-templating\" */\n\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-jsdoc\" */\n\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-flow\" */\n\n\n(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);\n/* \"prismjs/components/prism-n4js\" */\n\n\nPrism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {}\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\r?\\n|\\r)(?!\\r?\\n|\\r))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @param {boolean} starAlternative Whether to also add an alternative where all `_`s are replaced with `*`s.\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern, starAlternative) {\n    pattern = pattern.replace(/<inner>/g, inner);\n\n    if (starAlternative) {\n      pattern = pattern + '|' + pattern.replace(/_/g, '\\\\*');\n    }\n\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``.+?``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\r?\\n|\\r)|$)/.source.replace(/__/g, tableCell);\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\r?\\n|\\r)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /(^[ \\t]*(?:\\r?\\n|\\r))(?: {4}|\\t).+(?:(?:\\r?\\n|\\r)(?: {4}|\\t).+)*/m,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[(?:(?!\\])<inner>)+\\])/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'variable': {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'content': {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'string': {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      // pattern: /^(?:[_].*(?:\\r\\n?|\\n|(?![\\s\\S])))+/m\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n/* \"prismjs/components/prism-wasm\" */\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;\nexport default Prism;","import \"core-js/modules/es.array.reduce.js\";\nimport Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\nexport default theme;","import React from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\n\nconst CodeBlock = ({ children, className }) => {\n  const language = className.replace(/language-/, '') || '';\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={vsDark}\n      code={children}\n      language={language}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={`${className} min-w-full float-left p-4 rounded`}\n          style={{ ...style }}\n        >\n          {tokens.map((line, index) => {\n            return (\n              <div key={index} {...getLineProps({ line, key: index })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            );\n          })}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nexport default CodeBlock;\n","import React from 'react';\n\nconst BaseComponent = ({ children, level }) => {\n  const classNames = {\n    '1': 'text-2xl my-5',\n    '2': 'text-xl my-4',\n    '3': 'text-lg my-4',\n    '4': 'text-base my-4',\n    '5': 'text-sm my-3',\n    '6': 'text-xs my-3',\n  };\n  const Element = `h${level}`;\n  return <Element className={classNames[level]}>{children}</Element>;\n};\n\nconst ComposedHeading = level => ({ children }) => (\n  <BaseComponent level={level}>{children}</BaseComponent>\n);\n\nconst Heading = {\n  H1: ComposedHeading('1'),\n  H2: ComposedHeading('2'),\n  H3: ComposedHeading('3'),\n  H4: ComposedHeading('4'),\n  H5: ComposedHeading('5'),\n  H6: ComposedHeading('6'),\n};\n\nexport default Heading;\n","import React from 'react';\n\nconst A = ({ href, children }) => {\n  const isExternal = href.includes('http');\n  const attributes = {\n    className: 'underline hover:no-underline',\n    href,\n    target: isExternal ? '_blank' : '_self',\n    rel: isExternal ? 'noreferrer noopener' : null,\n  };\n  return <a {...attributes}>{children}</a>;\n};\n\nexport default A;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from '../components/layout';\nimport StartLink from '../components/StartLink';\nimport CodeBlock from '../components/CodeBlock';\nimport Headings from '../components/Heading';\nimport A from '../components/A';\n\nconst Template = ({ data: { mdx }, pageContext }) => {\n  const {\n    body,\n    frontmatter: { title, date },\n  } = mdx;\n  const { prev, next } = pageContext;\n\n  return (\n    <Layout>\n      <header className={'mb-4'}>\n        <h1 className={'text-3xl'}>{title}</h1>\n        <span className={'font-serif text-sm'}>{date}</span>\n      </header>\n      <div className={'mb-4 font-serif'}>\n        <MDXProvider\n          components={{\n            h1: Headings.H1,\n            h2: Headings.H2,\n            h3: Headings.H3,\n            h4: Headings.H4,\n            h5: Headings.H5,\n            h6: Headings.H6,\n            p: props => <p {...props} className={'my-4'} />,\n            a: A,\n            pre: ({ children }) => (\n              <div className={'overflow-x-auto'}>{children}</div>\n            ),\n            code: CodeBlock,\n          }}\n        >\n          <MDXRenderer>{body}</MDXRenderer>\n        </MDXProvider>\n      </div>\n      <nav>\n        <div className={'flex justify-between'}>\n          <div>\n            {prev && (\n              <Link to={prev.frontmatter.path}>« {prev.frontmatter.title}</Link>\n            )}\n          </div>\n          <div>\n            {next && (\n              <Link to={next.frontmatter.path}>{next.frontmatter.title} »</Link>\n            )}\n          </div>\n        </div>\n        <StartLink />\n      </nav>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    mdx(frontmatter: { path: { eq: $pathSlug } }) {\n      body\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`;\n\nexport default Template;\n"],"sourceRoot":""}