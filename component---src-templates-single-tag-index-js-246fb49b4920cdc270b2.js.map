{"version":3,"sources":["webpack:///./src/templates/singleTagIndex.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/layout.js","webpack:///./src/components/StartLink.js","webpack:///./src/components/Preview.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_StartLink__WEBPACK_IMPORTED_MODULE_3__","_components_Preview__WEBPACK_IMPORTED_MODULE_4__","SingleTagTemplate","_ref","pageContext","posts","tag","headingText","a","createElement","Fragment","className","map","post","idx","_post$frontmatter","frontmatter","title","date","excerpt","path","key","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","TitleAndDesc","_data$site$siteMetada","site","siteMetadata","description","react_default","gatsby_browser_entry","Header","Header_TitleAndDesc","_3978990474","Helmet_default","components_Header","StartLink","Preview"],"mappings":"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","file":"component---src-templates-single-tag-index-js-246fb49b4920cdc270b2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport StartLink from '../components/StartLink';\nimport Preview from '../components/Preview';\n\nconst SingleTagTemplate = ({ pageContext }) => {\n  const { posts, tag } = pageContext;\n  const headingText =\n    tag === 'uncategorized' ? (\n      'Uncategorized posts'\n    ) : (\n      <>\n        Posts tagged with <em>{tag}</em>\n      </>\n    );\n  return (\n    <Layout>\n      <div className={'mb-4'}>\n        <h1 className={'text-center text-2xl mb-4'}>{headingText}</h1>\n        <ul>\n          {posts.map((post, idx) => {\n            const { title, date, excerpt, path } = post.frontmatter;\n\n            return (\n              <Preview\n                key={idx}\n                title={title}\n                date={date}\n                excerpt={excerpt}\n                path={path}\n              />\n            );\n          })}\n        </ul>\n      </div>\n      <div className={'text-center p-4'}>\n        <Link className={'underline hover:no-underline'} to={'/tags'}>\n          Browse all tags\n        </Link>\n      </div>\n      <StartLink />\n    </Layout>\n  );\n};\n\nexport default SingleTagTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\n\nconst TitleAndDesc = ({ data }) => {\n  const { title, description } = data.site.siteMetadata;\n  return (\n    <div className=\"mb-8\">\n      <Link to={'/'}>\n        <h2 className=\"text-3xl text-center font-bold\">{title}</h2>\n      </Link>\n      <p className=\"text-center\">{description}</p>\n    </div>\n  );\n};\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => <TitleAndDesc data={data} />}\n  />\n);\n\nexport default Header;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\n\nexport default ({ children }) => (\n  <>\n    <Helmet title={'mundi.sh_'} />\n    <div className=\"m-0 max-w-2xl mx-auto p-5 min-h-screen flex flex-col\">\n      <Header />\n      <div className={'flex-grow'}>{children}</div>\n      <footer className={'text-center pt-4 mt-8 border-t text-sm'}>\n        Thanks for reading\n      </footer>\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst StartLink = () => {\n  return (\n    <div className={'text-center border-t pt-4'}>\n      <Link className={'underline hover:no-underline'} to=\"/\">\n        Back to start\n      </Link>\n    </div>\n  );\n};\n\nexport default StartLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Preview = ({ title, date, excerpt, path }) => {\n  return (\n    <Link to={path}>\n      <section className={'p-5 mb-5'}>\n        <header>\n          <h3 className={'text-xl font-bold'}>{title}</h3>\n          <span className={'font-serif text-sm'}>{date}</span>\n        </header>\n        <p className={'font-serif'}>{excerpt}</p>\n      </section>\n    </Link>\n  );\n};\n\nPreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default Preview;\n"],"sourceRoot":""}